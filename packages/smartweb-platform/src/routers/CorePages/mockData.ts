export const mockData = {
  "data": {
    "retrieveProject": {
      "id": "1",
      "name": "1",
      "pathWithNamespace": "1",
      "description": "1",
      "coverage": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\n  <title>smartweb</title>\n  <style>\n    body {\n      background-color: rgb(251, 252, 253);\n      /*font-weight: ;*/\n    }\n  </style>\n</head>\n<body>\n<div id=\"root\"></div>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/dayjs/1.10.6/dayjs.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/antd/5.19.0/antd.min.js\"></script>\n<script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.7.2/dist/axios.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/ahooks@3.8.0/dist/ahooks.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/ant-design-icons/5.3.7/index.umd.min.js\"></script>\n<script type=\"text/babel\">\n\n  const {useState} = React;\n  const {Table, Input, Button, Form, Select, Space, theme} = antd;\n  const {PlusOutlined} = icons;\n  const {useRequest} = ahooks;\n\n  const App = () => {\n    const [pageSize, setPageSize] = useState(10);\n    const [current, setCurrent] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [scenicSpotName, setScenicSpotName] = useState('');\n    const [scenicSpotType, setScenicSpotType] = useState('');\n    const [city, setCity] = useState('');\n\n    const {data: data, loading} = useRequest(() => {\n      const url = 'https://smartweb.fws.qa.nt.ctripcorp.com/listJapScenicSpot';\n      // const url = 'http://localhost:8080/listJapScenicSpot';\n      return axios.post(url, {\n        \"scenicSpotType\": scenicSpotType || undefined,\n        \"city\": city || undefined,\n        \"scenicSpotName\": scenicSpotName || undefined,\n        \"current\": current || undefined,\n        \"pageSize\": pageSize || undefined\n      }).then(res => {\n        return res.data\n      })\n    }, {\n      refreshDeps: [current, pageSize, scenicSpotType,scenicSpotName,city],\n      onSuccess: (res) => {\n        setTotal(res.total)\n        setCurrent(res.current)\n        setPageSize(res.pageSize)\n      }\n    })\n    const columns = [\n      {\n        title: '景点名',\n        dataIndex: 'scenicSpotName',\n        key: 'scenicSpotName',\n      },\n      {\n        title: '景点类型',\n        dataIndex: 'scenicSpotType',\n        key: 'scenicSpotType',\n      },\n      {\n        title: '适合去的月份',\n        dataIndex: 'suitableMonth',\n        key: 'suitableMonth',\n      },\n      {\n        title: '所在城市',\n        dataIndex: 'city',\n        key: 'city',\n      },\n    ];\n    const [form] = Form.useForm();\n    const onFinish = (values) => {\n      setCurrent(1);\n      setCity(values.city);\n      setScenicSpotName(values.name);\n      setScenicSpotType(values.type);\n    };\n    return (\n      <div className=\"p-5\">\n        <div className='flex justify-between p-5 mb-5 bg-white rounded shadow'>\n          <Form form={form} name=\"advanced_search\" onFinish={onFinish} className={'w-full'}>\n            <div className={'grid grid-cols-3 gap-4 p-4'}>\n              <Form.Item name=\"name\" label=\"景点名\">\n                <Input placeholder=\"请输入景点名\"/>\n              </Form.Item>\n              <Form.Item name=\"type\" label=\"景点类型\">\n                <Select placeholder=\"请选择景点类型\" options={\n                  data?data.scenicSpotTypeOptions:[]\n                }/>\n              </Form.Item>\n              <Form.Item name=\"city\" label=\"所在城市\">\n                <Select placeholder=\"请选择所在城市\" options={\n                  data?data.cityOptions:[]\n                }/>\n              </Form.Item>\n            </div>\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              <Space size=\"small\">\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                  查询\n                </Button>\n                <Button\n                  onClick={() => {\n                    form.resetFields();\n                  }}\n                >\n                  重置\n                </Button>\n              </Space>\n            </div>\n          </Form>\n        </div>\n        <div className=\"p-5 bg-white rounded shadow\">\n          <div className=\"flex justify-between mb-2\">\n            <h3 style={{\n              fontWeight: 'bold',\n            }}>查询表格</h3>\n            <Button type=\"primary\" icon={<PlusOutlined/>} disabled>新增</Button>\n          </div>\n          <Table\n            onChange={(pagination, filters, sorter, extra) => {\n              setCurrent(pagination.current)\n              setPageSize(pagination.pageSize)\n            }}\n            pagination={{\n              total: total,\n              showTotal: (total) => `共计 ${total} 个`,\n              current,\n              pageSize,\n            }}\n            loading={loading}\n            columns={columns}\n            dataSource={data?data.data:[]}\n            rowKey=\"key\"\n          />\n        </div>\n      </div>\n    );\n  };\n  ReactDOM.render(<App/>, document.getElementById('root'));\n</script>\n</body>\n\n</html>\n",
      "__typename": "Project2"
    }
  }
}
